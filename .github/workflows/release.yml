name: Release Workflow

on:
  push:
    tags:
      - "v*"

jobs:
  validate:
    name: Validate Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v1

      - name: Install dependencies
        run: uv sync --group dev

      - name: Run validation
        run: |
          make validate
          make docs-quality

      - name: Build package
        run: make build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: package-dist
          path: dist/

  github-release:
    name: Create GitHub Release
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## What's Changed

            This release includes various improvements and bug fixes.

            ## Installation

            ```bash
            pip install dg-sqlmesh==${{ steps.get_version.outputs.VERSION }}
            ```

            ## PyPI

            ðŸ“¦ [View on PyPI](https://pypi.org/project/dg-sqlmesh/)

            ## Documentation

            ðŸ“– [Full Documentation](https://fosk06.github.io/dagster-sqlmesh/)
          draft: false
          prerelease: false

  pypi-publish:
    name: Publish to PyPI
    needs: [validate, github-release]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v1

      - name: Install dependencies
        run: uv sync --group dev

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: package-dist
          path: dist/

      - name: Publish to PyPI
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: uv publish --token $UV_PUBLISH_TOKEN

      - name: Verify PyPI publication
        run: |
          sleep 30  # Wait for PyPI to update
          pip install --upgrade dg-sqlmesh
          python -c "import dg_sqlmesh; print(f'Installed version: {dg_sqlmesh.__version__}')"
