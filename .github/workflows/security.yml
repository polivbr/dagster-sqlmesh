name: Security Scan

on:
  schedule:
    # Run security scans every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'pyproject.toml'
      - 'uv.lock'
  pull_request:
    paths:
      - 'pyproject.toml'
      - 'uv.lock'

permissions:
  contents: read
  security-events: write

jobs:
  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync --group dev

      - name: Run pip-audit
        run: |
          echo "🔒 Running pip-audit for vulnerability scanning..."
          uv run pip-audit --desc --output=json --format=json > pip-audit-results.json || true
          uv run pip-audit --desc || true

      - name: Run safety check
        run: |
          echo "🛡️ Running safety check..."
          uv run safety check --json > safety-results.json || true
          uv run safety check || true

      - name: Upload security scan results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: |
            pip-audit-results.json
            safety-results.json
          retention-days: 30

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'

    strategy:
      fail-fast: false
      matrix:
        language: ['python']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          config-file: ./.github/codeql-config.yml

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync --group dev

      - name: Check licenses
        run: |
          echo "📄 Checking license compatibility..."
          uv run pip-licenses --format=json > licenses.json
          uv run pip-licenses --format=markdown > licenses.md
          
          echo "📋 License summary:"
          uv run pip-licenses --summary

      - name: Upload license report
        uses: actions/upload-artifact@v4
        with:
          name: license-report
          path: |
            licenses.json
            licenses.md
          retention-days: 30

  secrets-scan:
    name: Secrets Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better secret detection

      - name: Run TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified
